"use strict";self.webpackHotUpdatevanilla_boilerplate("main",{"./app/classes/Page.js":(e,t,s)=>{s.r(t),s.d(t,{default:()=>o});var i=s("./node_modules/lodash/lodash.js"),n=s("./node_modules/gsap/index.js"),a=s("./node_modules/@studio-freight/lenis/dist/lenis.mjs"),l=s("./app/animations/Indents.js");class o{constructor({id:e,element:t,elements:s}){this.id=e,this.selector=t,this.selectorChildren={...s,animatedIndents:"[data-animation='indents']"},this.lenis=new a.default({easing:e=>e<.5?8*e*e*e*e:1-Math.pow(-2*e+2,4)/2})}create(){this.element=document.querySelector(this.selector),this.elements=new Map,(0,i.each)(this.selectorChildren,((e,t)=>{e instanceof window.HTMLElement||e instanceof window.NodeList||Array.isArray(e)?this.elements.set(t,e):(this.elements.set(t,document.querySelectorAll(e)),0===this.elements.get(t).length?this.elements.set(t,null):1===this.elements.get(t).length&&this.elements.set(t,document.querySelector(e)))})),this.createAnimations()}createAnimations(){this.animatedIndents=(0,i.map)(this.elements.get("animatedIndents"),(e=>new l.default({element:e})))}show(){return window.scrollTo(0,0),new Promise((e=>{this.animateIn=n.default.timeline(),this.animateIn.to(this.element,{autoAlpha:1}),this.animateIn.call((t=>{this.initLenis(),e()}))}))}hide(){return new Promise((e=>{this.animateOut=n.default.timeline(),this.animateOut.to(this.element,{autoAlpha:0}),this.animateOut.call((t=>{e()}))}))}raf(e){this.lenis.raf(e),requestAnimationFrame(this.raf.bind(this))}initLenis(){this.lenis.on("scroll",(e=>{})),requestAnimationFrame(this.raf.bind(this))}}}},(function(e){e.h=()=>"e2623d67c2e9e71a3e73"}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWFpbi5mOGY2ZDI1MWNmMjVjODQ2ZDA2MC5ob3QtdXBkYXRlLmpzIiwibWFwcGluZ3MiOiIyU0FNZSxNQUFNQSxFQUNwQkMsV0FBQUEsRUFBWSxHQUFFQyxFQUFFLFFBQUVDLEVBQU8sU0FBRUMsSUFDMUJDLEtBQUtILEdBQUtBLEVBQ1ZHLEtBQUtDLFNBQVdILEVBQ2hCRSxLQUFLRSxpQkFBbUIsSUFDcEJILEVBQ0hJLGdCQUFpQiw4QkFHbEJILEtBQUtJLE1BQVEsSUFBSUMsRUFBQUEsUUFBTSxDQUV0QkMsT0FBU0MsR0FDUkEsRUFBSSxHQUFNLEVBQUlBLEVBQUlBLEVBQUlBLEVBQUlBLEVBQUksRUFBSUMsS0FBS0MsS0FBSyxFQUFJRixFQUFJLEVBQUcsR0FBSyxHQUUvRCxDQUVBRyxNQUFBQSxHQUNDVixLQUFLRixRQUFVYSxTQUFTQyxjQUFjWixLQUFLQyxVQUMzQ0QsS0FBS0QsU0FBVyxJQUFJYyxLQUVwQkMsRUFBQUEsRUFBQUEsTUFBS2QsS0FBS0Usa0JBQWtCLENBQUNELEVBQVVjLEtBRXJDZCxhQUFvQmUsT0FBT0MsYUFDM0JoQixhQUFvQmUsT0FBT0UsVUFHakJDLE1BQU1DLFFBQVFuQixHQUR4QkQsS0FBS0QsU0FBU3NCLElBQUlOLEVBQUtkLElBSXZCRCxLQUFLRCxTQUFTc0IsSUFBSU4sRUFBS0osU0FBU1csaUJBQWlCckIsSUFFWCxJQUFsQ0QsS0FBS0QsU0FBU3dCLElBQUlSLEdBQUtTLE9BQzFCeEIsS0FBS0QsU0FBU3NCLElBQUlOLEVBQUssTUFDcUIsSUFBbENmLEtBQUtELFNBQVN3QixJQUFJUixHQUFLUyxRQUNqQ3hCLEtBQUtELFNBQVNzQixJQUFJTixFQUFLSixTQUFTQyxjQUFjWCxJQUVoRCxJQUdERCxLQUFLeUIsa0JBQ04sQ0FFQUEsZ0JBQUFBLEdBR0N6QixLQUFLRyxpQkFBa0J1QixFQUFBQSxFQUFBQSxLQUN0QjFCLEtBQUtELFNBQVN3QixJQUFJLG9CQUNqQnpCLEdBQ08sSUFBSTZCLEVBQUFBLFFBQVEsQ0FDbEI3QixhQU1KLENBRUE4QixJQUFBQSxHQUdDLE9BRkFaLE9BQU9hLFNBQVMsRUFBRyxHQUVaLElBQUlDLFNBQVNDLElBQ25CL0IsS0FBS2dDLFVBQVlDLEVBQUFBLFFBQUtDLFdBRXRCbEMsS0FBS2dDLFVBQVVHLEdBQUduQyxLQUFLRixRQUFTLENBQy9Cc0MsVUFBVyxJQUdacEMsS0FBS2dDLFVBQVVLLE1BQU1DLElBQ3BCdEMsS0FBS3VDLFlBQ0xSLEdBQVMsR0FDUixHQUVKLENBRUFTLElBQUFBLEdBQ0MsT0FBTyxJQUFJVixTQUFTQyxJQUNuQi9CLEtBQUt5QyxXQUFhUixFQUFBQSxRQUFLQyxXQUV2QmxDLEtBQUt5QyxXQUFXTixHQUFHbkMsS0FBS0YsUUFBUyxDQUNoQ3NDLFVBQVcsSUFHWnBDLEtBQUt5QyxXQUFXSixNQUFNQyxJQUNyQlAsR0FBUyxHQUNSLEdBRUosQ0FFQVcsR0FBQUEsQ0FBSUMsR0FDSDNDLEtBQUtJLE1BQU1zQyxJQUFJQyxHQUNmQyxzQkFBc0I1QyxLQUFLMEMsSUFBSUcsS0FBSzdDLE1BQ3JDLENBRUF1QyxTQUFBQSxHQUNDdkMsS0FBS0ksTUFBTTBDLEdBQUcsVUFBV0MsUUFDekJILHNCQUFzQjVDLEtBQUswQyxJQUFJRyxLQUFLN0MsTUFDckMsRSxnQkN0R0RnRCxFQUFvQkMsRUFBSSxJQUFNLHNCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vdmFuaWxsYS1ib2lsZXJwbGF0ZS8uL2FwcC9jbGFzc2VzL1BhZ2UuanMiLCJ3ZWJwYWNrOi8vdmFuaWxsYS1ib2lsZXJwbGF0ZS93ZWJwYWNrL3J1bnRpbWUvZ2V0RnVsbEhhc2giXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgZWFjaCwgbWFwIH0gZnJvbSBcImxvZGFzaFwiO1xuaW1wb3J0IEdTQVAgZnJvbSBcImdzYXBcIjtcbmltcG9ydCBMZW5pcyBmcm9tIFwiQHN0dWRpby1mcmVpZ2h0L2xlbmlzXCI7XG5cbmltcG9ydCBJbmRlbnRzIGZyb20gXCJhbmltYXRpb25zL0luZGVudHNcIjtcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgUGFnZSB7XG5cdGNvbnN0cnVjdG9yKHsgaWQsIGVsZW1lbnQsIGVsZW1lbnRzIH0pIHtcblx0XHR0aGlzLmlkID0gaWQ7XG5cdFx0dGhpcy5zZWxlY3RvciA9IGVsZW1lbnQ7XG5cdFx0dGhpcy5zZWxlY3RvckNoaWxkcmVuID0ge1xuXHRcdFx0Li4uZWxlbWVudHMsXG5cdFx0XHRhbmltYXRlZEluZGVudHM6IFwiW2RhdGEtYW5pbWF0aW9uPSdpbmRlbnRzJ11cIixcblx0XHR9O1xuXG5cdFx0dGhpcy5sZW5pcyA9IG5ldyBMZW5pcyh7XG5cdFx0XHQvLyBkdXJhdGlvbjogMS4yLFxuXHRcdFx0ZWFzaW5nOiAoeCkgPT5cblx0XHRcdFx0eCA8IDAuNSA/IDggKiB4ICogeCAqIHggKiB4IDogMSAtIE1hdGgucG93KC0yICogeCArIDIsIDQpIC8gMixcblx0XHR9KTtcblx0fVxuXG5cdGNyZWF0ZSgpIHtcblx0XHR0aGlzLmVsZW1lbnQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKHRoaXMuc2VsZWN0b3IpO1xuXHRcdHRoaXMuZWxlbWVudHMgPSBuZXcgTWFwKCk7XG5cblx0XHRlYWNoKHRoaXMuc2VsZWN0b3JDaGlsZHJlbiwgKHNlbGVjdG9yLCBrZXkpID0+IHtcblx0XHRcdGlmIChcblx0XHRcdFx0c2VsZWN0b3IgaW5zdGFuY2VvZiB3aW5kb3cuSFRNTEVsZW1lbnQgfHxcblx0XHRcdFx0c2VsZWN0b3IgaW5zdGFuY2VvZiB3aW5kb3cuTm9kZUxpc3Rcblx0XHRcdCkge1xuXHRcdFx0XHR0aGlzLmVsZW1lbnRzLnNldChrZXksIHNlbGVjdG9yKTtcblx0XHRcdH0gZWxzZSBpZiAoQXJyYXkuaXNBcnJheShzZWxlY3RvcikpIHtcblx0XHRcdFx0dGhpcy5lbGVtZW50cy5zZXQoa2V5LCBzZWxlY3Rvcik7XG5cdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHR0aGlzLmVsZW1lbnRzLnNldChrZXksIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoc2VsZWN0b3IpKTtcblxuXHRcdFx0XHRpZiAodGhpcy5lbGVtZW50cy5nZXQoa2V5KS5sZW5ndGggPT09IDApIHtcblx0XHRcdFx0XHR0aGlzLmVsZW1lbnRzLnNldChrZXksIG51bGwpO1xuXHRcdFx0XHR9IGVsc2UgaWYgKHRoaXMuZWxlbWVudHMuZ2V0KGtleSkubGVuZ3RoID09PSAxKSB7XG5cdFx0XHRcdFx0dGhpcy5lbGVtZW50cy5zZXQoa2V5LCBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKHNlbGVjdG9yKSk7XG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHR9KTtcblxuXHRcdHRoaXMuY3JlYXRlQW5pbWF0aW9ucygpO1xuXHR9XG5cblx0Y3JlYXRlQW5pbWF0aW9ucygpIHtcblx0XHQvLyBjb25zb2xlLmxvZyh0aGlzLmVsZW1lbnRzLmdldChcImFuaW1hdGVkSW5kZW50c1wiKSk7XG5cblx0XHR0aGlzLmFuaW1hdGVkSW5kZW50cyA9IG1hcChcblx0XHRcdHRoaXMuZWxlbWVudHMuZ2V0KFwiYW5pbWF0ZWRJbmRlbnRzXCIpLFxuXHRcdFx0KGVsZW1lbnQpID0+IHtcblx0XHRcdFx0cmV0dXJuIG5ldyBJbmRlbnRzKHtcblx0XHRcdFx0XHRlbGVtZW50LFxuXHRcdFx0XHR9KTtcblx0XHRcdH1cblx0XHQpO1xuXG5cdFx0Ly8gY29uc29sZS5sb2codGhpcy5hbmltYXRlZEluZGVudHMpO1xuXHR9XG5cblx0c2hvdygpIHtcblx0XHR3aW5kb3cuc2Nyb2xsVG8oMCwgMCk7XG5cblx0XHRyZXR1cm4gbmV3IFByb21pc2UoKHJlc29sdmUpID0+IHtcblx0XHRcdHRoaXMuYW5pbWF0ZUluID0gR1NBUC50aW1lbGluZSgpO1xuXG5cdFx0XHR0aGlzLmFuaW1hdGVJbi50byh0aGlzLmVsZW1lbnQsIHtcblx0XHRcdFx0YXV0b0FscGhhOiAxLFxuXHRcdFx0fSk7XG5cblx0XHRcdHRoaXMuYW5pbWF0ZUluLmNhbGwoKF8pID0+IHtcblx0XHRcdFx0dGhpcy5pbml0TGVuaXMoKTtcblx0XHRcdFx0cmVzb2x2ZSgpO1xuXHRcdFx0fSk7XG5cdFx0fSk7XG5cdH1cblxuXHRoaWRlKCkge1xuXHRcdHJldHVybiBuZXcgUHJvbWlzZSgocmVzb2x2ZSkgPT4ge1xuXHRcdFx0dGhpcy5hbmltYXRlT3V0ID0gR1NBUC50aW1lbGluZSgpO1xuXG5cdFx0XHR0aGlzLmFuaW1hdGVPdXQudG8odGhpcy5lbGVtZW50LCB7XG5cdFx0XHRcdGF1dG9BbHBoYTogMCxcblx0XHRcdH0pO1xuXG5cdFx0XHR0aGlzLmFuaW1hdGVPdXQuY2FsbCgoXykgPT4ge1xuXHRcdFx0XHRyZXNvbHZlKCk7XG5cdFx0XHR9KTtcblx0XHR9KTtcblx0fVxuXG5cdHJhZih0aW1lKSB7XG5cdFx0dGhpcy5sZW5pcy5yYWYodGltZSk7XG5cdFx0cmVxdWVzdEFuaW1hdGlvbkZyYW1lKHRoaXMucmFmLmJpbmQodGhpcykpO1xuXHR9XG5cblx0aW5pdExlbmlzKCkge1xuXHRcdHRoaXMubGVuaXMub24oXCJzY3JvbGxcIiwgKGUpID0+IHt9KTtcblx0XHRyZXF1ZXN0QW5pbWF0aW9uRnJhbWUodGhpcy5yYWYuYmluZCh0aGlzKSk7XG5cdH1cbn1cbiIsIl9fd2VicGFja19yZXF1aXJlX18uaCA9ICgpID0+IChcImUyNjIzZDY3YzJlOWU3MWEzZTczXCIpIl0sIm5hbWVzIjpbIlBhZ2UiLCJjb25zdHJ1Y3RvciIsImlkIiwiZWxlbWVudCIsImVsZW1lbnRzIiwidGhpcyIsInNlbGVjdG9yIiwic2VsZWN0b3JDaGlsZHJlbiIsImFuaW1hdGVkSW5kZW50cyIsImxlbmlzIiwiTGVuaXMiLCJlYXNpbmciLCJ4IiwiTWF0aCIsInBvdyIsImNyZWF0ZSIsImRvY3VtZW50IiwicXVlcnlTZWxlY3RvciIsIk1hcCIsImVhY2giLCJrZXkiLCJ3aW5kb3ciLCJIVE1MRWxlbWVudCIsIk5vZGVMaXN0IiwiQXJyYXkiLCJpc0FycmF5Iiwic2V0IiwicXVlcnlTZWxlY3RvckFsbCIsImdldCIsImxlbmd0aCIsImNyZWF0ZUFuaW1hdGlvbnMiLCJtYXAiLCJJbmRlbnRzIiwic2hvdyIsInNjcm9sbFRvIiwiUHJvbWlzZSIsInJlc29sdmUiLCJhbmltYXRlSW4iLCJHU0FQIiwidGltZWxpbmUiLCJ0byIsImF1dG9BbHBoYSIsImNhbGwiLCJfIiwiaW5pdExlbmlzIiwiaGlkZSIsImFuaW1hdGVPdXQiLCJyYWYiLCJ0aW1lIiwicmVxdWVzdEFuaW1hdGlvbkZyYW1lIiwiYmluZCIsIm9uIiwiZSIsIl9fd2VicGFja19yZXF1aXJlX18iLCJoIl0sInNvdXJjZVJvb3QiOiIifQ==