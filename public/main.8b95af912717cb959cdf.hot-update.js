"use strict";self.webpackHotUpdatevanilla_boilerplate("main",{"./app/components/Cursor.js":(e,t,s)=>{s.r(t),s.d(t,{default:()=>l});var o=s("./node_modules/auto-bind/index.js"),a=s("./app/classes/Component.js"),n=s("./node_modules/lodash/lodash.js"),i=s("./node_modules/gsap/index.js");class l extends a.default{constructor(){super({element:".cursor"}),this.x={value:0},this.y={value:0},(0,o.default)(this),this.update(),this.loop(),this.addEventListeners()}onMouseMove(e){this.x.value=e.clientX,this.y.value=e.clientY}onMouseOut(){this.x.value=-100,this.y.value=-100}onMouseEnter(e){this.element.innerHTML=e.target.getAttribute("data-label"),i.default.to(this.element,{autoAlpha:1,duration:0})}onMouseOver(e){const t=e.target.closest("[data-label]");t&&(this.element.innerHTML=t.getAttribute("data-label")),i.default.to(this.element,{autoAlpha:1,duration:0})}onMouseLeave(){i.default.to(this.element,{autoAlpha:0,duration:.1})}loop(){this.element.style.transform=`translate3d(${this.x.value-this.element.offsetWidth/2}px, ${this.y.value-this.element.offsetHeight/2}px, 0)`,this.frame=window.requestAnimationFrame(this.loop)}update(){(0,n.each)(document.querySelectorAll("[data-label]"),(e=>{e.addEventListener("mouseenter",this.onMouseEnter),e.addEventListener("mouseover",this.onMouseOver),e.addEventListener("mouseleave",this.onMouseLeave),e.addEventListener("click",this.onMouseLeave)}))}addEventListeners(){window.addEventListener("mousemove",(e=>this.onMouseMove(e))),window.addEventListener("mouseout",(e=>this.onMouseOut(e)))}}}},(function(e){e.h=()=>"cc2441cfb35704d0d58f"}));
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWFpbi44Yjk1YWY5MTI3MTdjYjk1OWNkZi5ob3QtdXBkYXRlLmpzIiwibWFwcGluZ3MiOiI2UkFLZSxNQUFNQSxVQUFlQyxFQUFBQSxRQUNuQ0MsV0FBQUEsR0FDQ0MsTUFBTSxDQUNMQyxRQUFTLFlBR1ZDLEtBQUtDLEVBQUksQ0FBRUMsTUFBTyxHQUNsQkYsS0FBS0csRUFBSSxDQUFFRCxNQUFPLElBRWxCRSxFQUFBQSxFQUFBQSxTQUFTSixNQUVUQSxLQUFLSyxTQUNMTCxLQUFLTSxPQUNMTixLQUFLTyxtQkFDTixDQUVBQyxXQUFBQSxDQUFZQyxHQUNYVCxLQUFLQyxFQUFFQyxNQUFRTyxFQUFNQyxRQUNyQlYsS0FBS0csRUFBRUQsTUFBUU8sRUFBTUUsT0FDdEIsQ0FFQUMsVUFBQUEsR0FDQ1osS0FBS0MsRUFBRUMsT0FBUyxJQUNoQkYsS0FBS0csRUFBRUQsT0FBUyxHQUNqQixDQUVBVyxZQUFBQSxDQUFhSixHQUVaVCxLQUFLRCxRQUFRZSxVQUFZTCxFQUFNTSxPQUFPQyxhQUFhLGNBRW5EQyxFQUFBQSxRQUFLQyxHQUFHbEIsS0FBS0QsUUFBUyxDQUNyQm9CLFVBQVcsRUFDWEMsU0FBVSxHQUVaLENBRUFDLFdBQUFBLENBQVlaLEdBQ1gsTUFBTU0sRUFBU04sRUFBTU0sT0FBT08sUUFBUSxnQkFDaENQLElBQ0hmLEtBQUtELFFBQVFlLFVBQVlDLEVBQU9DLGFBQWEsZUFHOUNDLEVBQUFBLFFBQUtDLEdBQUdsQixLQUFLRCxRQUFTLENBQ3JCb0IsVUFBVyxFQUNYQyxTQUFVLEdBRVosQ0FFQUcsWUFBQUEsR0FDQ04sRUFBQUEsUUFBS0MsR0FBR2xCLEtBQUtELFFBQVMsQ0FDckJvQixVQUFXLEVBQ1hDLFNBQVUsSUFFWixDQUVBZCxJQUFBQSxHQUNDTixLQUFLRCxRQUFReUIsTUFBTUMsVUFBYSxlQUMvQnpCLEtBQUtDLEVBQUVDLE1BQVFGLEtBQUtELFFBQVEyQixZQUFjLFFBQ3BDMUIsS0FBS0csRUFBRUQsTUFBUUYsS0FBS0QsUUFBUTRCLGFBQWUsVUFFbEQzQixLQUFLNEIsTUFBUUMsT0FBT0Msc0JBQXNCOUIsS0FBS00sS0FDaEQsQ0FFQUQsTUFBQUEsSUFDQzBCLEVBQUFBLEVBQUFBLE1BQUtDLFNBQVNDLGlCQUFpQixpQkFBa0JsQyxJQUNoREEsRUFBUW1DLGlCQUFpQixhQUFjbEMsS0FBS2EsY0FDNUNkLEVBQVFtQyxpQkFBaUIsWUFBYWxDLEtBQUtxQixhQUMzQ3RCLEVBQVFtQyxpQkFBaUIsYUFBY2xDLEtBQUt1QixjQUM1Q3hCLEVBQVFtQyxpQkFBaUIsUUFBU2xDLEtBQUt1QixhQUFhLEdBRXRELENBRUFoQixpQkFBQUEsR0FDQ3NCLE9BQU9LLGlCQUFpQixhQUFjQyxHQUFNbkMsS0FBS1EsWUFBWTJCLEtBQzdETixPQUFPSyxpQkFBaUIsWUFBYUMsR0FBTW5DLEtBQUtZLFdBQVd1QixJQUM1RCxFLGdCQ2hGREMsRUFBb0JDLEVBQUksSUFBTSxzQiIsInNvdXJjZXMiOlsid2VicGFjazovL3ZhbmlsbGEtYm9pbGVycGxhdGUvLi9hcHAvY29tcG9uZW50cy9DdXJzb3IuanMiLCJ3ZWJwYWNrOi8vdmFuaWxsYS1ib2lsZXJwbGF0ZS93ZWJwYWNrL3J1bnRpbWUvZ2V0RnVsbEhhc2giXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IEF1dG9CaW5kIGZyb20gXCJhdXRvLWJpbmRcIjtcbmltcG9ydCBDb21wb25lbnQgZnJvbSBcImNsYXNzZXMvQ29tcG9uZW50XCI7XG5pbXBvcnQgeyBlYWNoIH0gZnJvbSBcImxvZGFzaFwiO1xuaW1wb3J0IGdzYXAgZnJvbSBcImdzYXBcIjtcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgQ3Vyc29yIGV4dGVuZHMgQ29tcG9uZW50IHtcblx0Y29uc3RydWN0b3IoKSB7XG5cdFx0c3VwZXIoe1xuXHRcdFx0ZWxlbWVudDogXCIuY3Vyc29yXCIsXG5cdFx0fSk7XG5cblx0XHR0aGlzLnggPSB7IHZhbHVlOiAwIH07XG5cdFx0dGhpcy55ID0geyB2YWx1ZTogMCB9O1xuXG5cdFx0QXV0b0JpbmQodGhpcyk7XG5cblx0XHR0aGlzLnVwZGF0ZSgpO1xuXHRcdHRoaXMubG9vcCgpO1xuXHRcdHRoaXMuYWRkRXZlbnRMaXN0ZW5lcnMoKTtcblx0fVxuXG5cdG9uTW91c2VNb3ZlKGV2ZW50KSB7XG5cdFx0dGhpcy54LnZhbHVlID0gZXZlbnQuY2xpZW50WDtcblx0XHR0aGlzLnkudmFsdWUgPSBldmVudC5jbGllbnRZO1xuXHR9XG5cblx0b25Nb3VzZU91dCgpIHtcblx0XHR0aGlzLngudmFsdWUgPSAtMTAwO1xuXHRcdHRoaXMueS52YWx1ZSA9IC0xMDA7XG5cdH1cblxuXHRvbk1vdXNlRW50ZXIoZXZlbnQpIHtcblx0XHQvLyBzZXQgdGhlIGNvbnRlbnQgb2YgdGhlIGxhYmVsIHRvIHRoZSBkYXRhLWxhYmVsIGF0dHJpYnV0ZSBvZiB0aGUgaG92ZXJlZCBlbGVtZW50XG5cdFx0dGhpcy5lbGVtZW50LmlubmVySFRNTCA9IGV2ZW50LnRhcmdldC5nZXRBdHRyaWJ1dGUoXCJkYXRhLWxhYmVsXCIpO1xuXG5cdFx0Z3NhcC50byh0aGlzLmVsZW1lbnQsIHtcblx0XHRcdGF1dG9BbHBoYTogMSxcblx0XHRcdGR1cmF0aW9uOiAwLFxuXHRcdH0pO1xuXHR9XG5cblx0b25Nb3VzZU92ZXIoZXZlbnQpIHtcblx0XHRjb25zdCB0YXJnZXQgPSBldmVudC50YXJnZXQuY2xvc2VzdChcIltkYXRhLWxhYmVsXVwiKTtcblx0XHRpZiAodGFyZ2V0KSB7XG5cdFx0XHR0aGlzLmVsZW1lbnQuaW5uZXJIVE1MID0gdGFyZ2V0LmdldEF0dHJpYnV0ZShcImRhdGEtbGFiZWxcIik7XG5cdFx0fVxuXG5cdFx0Z3NhcC50byh0aGlzLmVsZW1lbnQsIHtcblx0XHRcdGF1dG9BbHBoYTogMSxcblx0XHRcdGR1cmF0aW9uOiAwLFxuXHRcdH0pO1xuXHR9XG5cblx0b25Nb3VzZUxlYXZlKCkge1xuXHRcdGdzYXAudG8odGhpcy5lbGVtZW50LCB7XG5cdFx0XHRhdXRvQWxwaGE6IDAsXG5cdFx0XHRkdXJhdGlvbjogMC4xLFxuXHRcdH0pO1xuXHR9XG5cblx0bG9vcCgpIHtcblx0XHR0aGlzLmVsZW1lbnQuc3R5bGUudHJhbnNmb3JtID0gYHRyYW5zbGF0ZTNkKCR7XG5cdFx0XHR0aGlzLngudmFsdWUgLSB0aGlzLmVsZW1lbnQub2Zmc2V0V2lkdGggLyAyXG5cdFx0fXB4LCAke3RoaXMueS52YWx1ZSAtIHRoaXMuZWxlbWVudC5vZmZzZXRIZWlnaHQgLyAyfXB4LCAwKWA7XG5cblx0XHR0aGlzLmZyYW1lID0gd2luZG93LnJlcXVlc3RBbmltYXRpb25GcmFtZSh0aGlzLmxvb3ApO1xuXHR9XG5cblx0dXBkYXRlKCkge1xuXHRcdGVhY2goZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbChcIltkYXRhLWxhYmVsXVwiKSwgKGVsZW1lbnQpID0+IHtcblx0XHRcdGVsZW1lbnQuYWRkRXZlbnRMaXN0ZW5lcihcIm1vdXNlZW50ZXJcIiwgdGhpcy5vbk1vdXNlRW50ZXIpO1xuXHRcdFx0ZWxlbWVudC5hZGRFdmVudExpc3RlbmVyKFwibW91c2VvdmVyXCIsIHRoaXMub25Nb3VzZU92ZXIpO1xuXHRcdFx0ZWxlbWVudC5hZGRFdmVudExpc3RlbmVyKFwibW91c2VsZWF2ZVwiLCB0aGlzLm9uTW91c2VMZWF2ZSk7XG5cdFx0XHRlbGVtZW50LmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCB0aGlzLm9uTW91c2VMZWF2ZSk7XG5cdFx0fSk7XG5cdH1cblxuXHRhZGRFdmVudExpc3RlbmVycygpIHtcblx0XHR3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcihcIm1vdXNlbW92ZVwiLCAoZSkgPT4gdGhpcy5vbk1vdXNlTW92ZShlKSk7XG5cdFx0d2luZG93LmFkZEV2ZW50TGlzdGVuZXIoXCJtb3VzZW91dFwiLCAoZSkgPT4gdGhpcy5vbk1vdXNlT3V0KGUpKTtcblx0fVxufVxuIiwiX193ZWJwYWNrX3JlcXVpcmVfXy5oID0gKCkgPT4gKFwiY2MyNDQxY2ZiMzU3MDRkMGQ1OGZcIikiXSwibmFtZXMiOlsiQ3Vyc29yIiwiQ29tcG9uZW50IiwiY29uc3RydWN0b3IiLCJzdXBlciIsImVsZW1lbnQiLCJ0aGlzIiwieCIsInZhbHVlIiwieSIsIkF1dG9CaW5kIiwidXBkYXRlIiwibG9vcCIsImFkZEV2ZW50TGlzdGVuZXJzIiwib25Nb3VzZU1vdmUiLCJldmVudCIsImNsaWVudFgiLCJjbGllbnRZIiwib25Nb3VzZU91dCIsIm9uTW91c2VFbnRlciIsImlubmVySFRNTCIsInRhcmdldCIsImdldEF0dHJpYnV0ZSIsImdzYXAiLCJ0byIsImF1dG9BbHBoYSIsImR1cmF0aW9uIiwib25Nb3VzZU92ZXIiLCJjbG9zZXN0Iiwib25Nb3VzZUxlYXZlIiwic3R5bGUiLCJ0cmFuc2Zvcm0iLCJvZmZzZXRXaWR0aCIsIm9mZnNldEhlaWdodCIsImZyYW1lIiwid2luZG93IiwicmVxdWVzdEFuaW1hdGlvbkZyYW1lIiwiZWFjaCIsImRvY3VtZW50IiwicXVlcnlTZWxlY3RvckFsbCIsImFkZEV2ZW50TGlzdGVuZXIiLCJlIiwiX193ZWJwYWNrX3JlcXVpcmVfXyIsImgiXSwic291cmNlUm9vdCI6IiJ9